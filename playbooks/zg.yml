---
- name: Install zero gravity node
  hosts: zg
  remote_user: ansible
  tasks:

    - name: Show params
      debug:
        msg: user {{ user }}, port_prefix {{ port_prefix }}, go_version {{ go_version }}

    - name: Create system user
      become: yes
      become_user: root
      ansible.builtin.user: name="{{ user }}" shell=/usr/bin/bash

    - name: Install jq lz4 build-essential curl acl git
      become: yes
      become_user: root
      ansible.builtin.apt:
        update_cache: yes
        pkg:
          - jq
          - lz4
          - build-essential
          - curl
          - acl
          - git
          - make
          - gcc

    - name: Create /opt folder
      become: yes
      become_user: root
      ansible.builtin.file:
        path: /opt
        state: directory
        mode: '777'

    - name: Create /home/{{ user }}/usr/local folder
      become: yes
      become_user: "{{ user }}"
      ansible.builtin.file:
        path: /home/{{ user }}/usr/local
        state: directory

    - name: Install go
      become: yes
      become_user: "{{ user }}"
      shell: |
        cd
        VERSION={{ go_version }}
        wget "https://go.dev/dl/go$VERSION.linux-amd64.tar.gz" -O go.tar.gz > /dev/null 2>&1
        ls go.tar.gz && ls ~/usr/local/go && rm -rf ~/usr/local/go
        tar -xzf go.tar.gz -C ~/usr/local
        rm go.tar.gz
        ~/usr/local/go/bin/go version

    - name: Clone 0g-chain repo
      become: yes
      become_user: "{{ user }}"
      ansible.builtin.git:
        repo: 'https://github.com/0glabs/0g-chain.git'
        dest: /home/{{ user }}/0g-chain
        version: "{{ git_tag }}"

    - name: Build zero gravity
      become: yes
      become_user: "{{ user }}"
      async: 1800
      poll: 60
      vars:
        ansible_command_timeout: 60
      shell: |
        export PATH=$PATH:~/usr/local/go/bin:~/go/bin/
        export GOPATH=~/go
        cd /home/{{ user }}/0g-chain
        make install
        0gchaind version --long | tail

    - name: Backup 0gd service
      become: yes
      become_user: root
      ansible.builtin.copy:
        remote_src: true
        src: /etc/systemd/system/0gd.service
        dest: /etc/systemd/system/0gd.service.bkp

    - name: Setup 0gd service
      become: yes
      become_user: root
      ansible.builtin.template:
        src: systemd/zg.j2
        dest: /etc/systemd/system/0gd.service

    - name: Reload systemd daemon
      become: yes
      become_user: root
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: Configure zero gravity node
      become: yes
      become_user: "{{ user }}"
      shell: |
        export PATH=$PATH:/opt/zero-gravity/bin
        0gchaind config chain-id {{ chain_id }}
        0gchaind config keyring-backend os

        wget {{ genesis_url }} -O ~/.0gchain/config/genesis.json
        # Get dymanic addrbook
        #wget -O ~/.0gchain/config/addrbook.json https://raw.githubusercontent.com/masim05/play-web3/main/assets/addrbook.json

        SEEDS="{{ seeds }}"
        sed -i.bak -e "s/^seeds *=.*/seeds = \"${SEEDS}\"/" $HOME/.0gchain/config/config.toml

        export PORT_PREFIX={{ port_prefix }}

        sed -i.bak -e "s%:1317%:${PORT_PREFIX}317%g" \
        -e "s%:8080%:${PORT_PREFIX}080%g" \
        -e "s%:9090%:${PORT_PREFIX}090%g" \
        -e "s%:9091%:${PORT_PREFIX}091%g" \
        -e "s%:8545%:${PORT_PREFIX}545%g" \
        -e "s%:8546%:${PORT_PREFIX}546%g" \
        -e "s%:6065%:${PORT_PREFIX}065%g" ~/.0gchain/config/app.toml

        sed -i.bak -e "s%:26658%:${PORT_PREFIX}658%g" \
        -e "s%:26657%:${PORT_PREFIX}657%g" \
        -e "s%:6060%:${PORT_PREFIX}060%g" \
        -e "s%:26656%:${PORT_PREFIX}656%g" \
        -e "s%:26660%:${PORT_PREFIX}660%g" ~/.0gchain/config/config.toml

    - name: Start 0gd service
      become: yes
      become_user: root
      ansible.builtin.systemd_service:
        state: started
        name: 0gd

    - name: Wait 60 seconds
      ansible.builtin.pause: seconds=60

    - name: Stop 0gd service
      become: yes
      become_user: root
      ansible.builtin.systemd_service:
        state: stopped
        name: 0gd

#    - name: Sync zero gravity node
#      become: yes
#      become_user: "{{ user }}"
#      async: 1800
#      poll: 60
#      shell: |
#        cp ~/.0gchain/data/priv_validator_state.json  ~/.0gchain/priv_validator_state.json
#        rm -rf ~/.0gchain/data
#        rm -rf ~/.0gchain/wasm
#        curl -o - -L https://config-t.noders.services/og/data.tar.lz4 | lz4 -d | tar -x -C ~/.0gchain
#        #curl -o - -L https://og.snapshot.stavr.tech/og-snap.tar.lz4 | lz4 -c -d - | tar -x -C ~/.0gchain --strip-components 2 > /dev/null 2>&1
#        #curl -o - -L http://band.files.stavr.tech:1103/files-band.tar.lz4 | lz4 -c -d - | tar -x -C $HOME/.0gchain --strip-components 2
#        cp ~/.0gchain/priv_validator_state.json  ~/.0gchain/data/priv_validator_state.json
#        echo RC: $?
#
#    - name: Start 0gd service
#      become: yes
#      become_user: root
#      ansible.builtin.systemd_service:
#        state: started
#        name: 0gd
#
#    - name: Enable 0gd service
#      become: yes
#      become_user: root
#      ansible.builtin.systemd_service:
#        name: 0gd
#        enabled: true
#
#    - name: Wait 60 seconds
#      ansible.builtin.pause: seconds=60
#
#    - name: Get 0gd service status
#      become: yes
#      become_user: root
#      shell: |
#        systemctl status 0gd
#        echo RC: $?
#